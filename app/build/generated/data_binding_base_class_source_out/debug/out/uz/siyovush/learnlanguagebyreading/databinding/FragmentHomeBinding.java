// Generated by view binder compiler. Do not edit!
package uz.siyovush.learnlanguagebyreading.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.siyovush.learnlanguagebyreading.R;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addBtn;

  @NonNull
  public final TextView count;

  @NonNull
  public final LinearLayout lnr;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final ImageView sortImage;

  @NonNull
  public final LinearLayout srt;

  @NonNull
  public final TextView tvBooks;

  @NonNull
  public final TextView type;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addBtn, @NonNull TextView count, @NonNull LinearLayout lnr,
      @NonNull RecyclerView recyclerView, @NonNull ImageView sortImage, @NonNull LinearLayout srt,
      @NonNull TextView tvBooks, @NonNull TextView type) {
    this.rootView = rootView;
    this.addBtn = addBtn;
    this.count = count;
    this.lnr = lnr;
    this.recyclerView = recyclerView;
    this.sortImage = sortImage;
    this.srt = srt;
    this.tvBooks = tvBooks;
    this.type = type;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_btn;
      FloatingActionButton addBtn = ViewBindings.findChildViewById(rootView, id);
      if (addBtn == null) {
        break missingId;
      }

      id = R.id.count;
      TextView count = ViewBindings.findChildViewById(rootView, id);
      if (count == null) {
        break missingId;
      }

      id = R.id.lnr;
      LinearLayout lnr = ViewBindings.findChildViewById(rootView, id);
      if (lnr == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.sort_image;
      ImageView sortImage = ViewBindings.findChildViewById(rootView, id);
      if (sortImage == null) {
        break missingId;
      }

      id = R.id.srt;
      LinearLayout srt = ViewBindings.findChildViewById(rootView, id);
      if (srt == null) {
        break missingId;
      }

      id = R.id.tv_books;
      TextView tvBooks = ViewBindings.findChildViewById(rootView, id);
      if (tvBooks == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, addBtn, count, lnr, recyclerView,
          sortImage, srt, tvBooks, type);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
